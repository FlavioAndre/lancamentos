services:
  controle_lancamentos:
    build:
      context: ./controle_lancamentos
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=controle_lancamentos_db;Database=controle_lancamentos;Username=postgres;Password=postgres
    depends_on:
      - controle_lancamentos_db
      - rabbitmq
            
  consolidado:
    build:
      context: ./consolidado
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=consolidado_db;Database=consolidado;Username=postgres;Password=postgres
    depends_on:
      - consolidado_db
      - rabbitmq

  controle_lancamentos_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: controle_lancamentos
    ports:
      - "5433:5432"  # Porta interna do contêiner PostgreSQL do controle_lancamentos
    volumes:
      - ./controle_lancamentos/src/Infrastructure/Database/init.sql:/docker-entrypoint-initdb.d/init.sql

  consolidado_db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: consolidado
    ports:
      - "5434:5432"  # Porta interna do contêiner PostgreSQL do consolidado
    volumes:
      - ./consolidado/src/Infrastructure/Database/init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
